---
kind: source
spec:
  name: ldap_test
  registry: local
  path: /data/workspaces/gomods/cq-source-ldap/dist/cq-source-ldap_linux_amd64_v1/cq-source-ldap
  version: v0.1.0
  tables: 
    ["*"]
  destinations:
    - sqlite
  spec:
    endpoint: ${LDAP_ENDPOINT} # "ldap://ldap.example.com:389"
    username: ${LDAP_USERNAME} # "cn=read-only-admin,dc=example,dc=com"
    password: ${LDAP_PASSWORD} # "myP4$sW0Rd!"
    skiptls: true
    query:
      basedn: ${LDAP_BASEDN}
      query: (objectclass=organizationalPerson)
      scope: subtree
      attributes:
        - dn              # distinguished name
        - cn              # common name
        - sAMAccountName  # login name
        - objectSID       # SID (binary)
        - displayName     # full name
        - givenName       # first name
        - sn              # family name
        - mail            # email
        - telephoneNumber # phone number
        - mobile          # mobile phone
        - manager         # manager's DN
        - memberOf        # group DNs
      filter: |
        // assume all valid user ids are like A1234
        function accept(attributes) { 
          const cn = toStrings(attributes.cn);
          if (cn.length > 0) {
            const re = /[A-Z]\d{4}/;
            if (cn[0].match(re)) {
              return true
            }
          }
          return false;
        }
    table: 
      name: USERS
      columns:
        - name: distinguished_name
          type: string
          key: true
          unique: true
          notnull: true
          mapping: '{{if index . (lower "dn")}}{{ index . (lower "dn") 0 | toString }}{{end}}'
        - name: common_name
          mapping: '{{if index . (lower "cn")}}{{ index . (lower "cn") 0 | toString }}{{end}}'
        - name: logon_name
          mapping: '{{if index . (lower "sAMAccountName")}}{{ index . (lower "sAMAccountName") 0 | toString }}{{end}}'
        - name: sid
          mapping: '{{if index . (lower "objectSID")}}{{ index . (lower "objectSID") 0 | toSID }}{{end}}'
        - name: full_name
          mapping: '{{if index . (lower "displayName")}}{{ index . (lower "displayName") 0 | toString }}{{end}}'
        - name: first_name
          mapping: '{{if index . (lower "givenName")}}{{ index . (lower "givenName") 0 | toString }}{{end}}'
        - name: family_name
          mapping: '{{if index . (lower "sn")}}{{ index . (lower "sn") 0 | toString }}{{end}}'
        - name: email
          mapping: '{{if index . (lower "mail")}}{{ index . (lower "mail") 0 | toString }}{{end}}'  
        - name: phone_number
          mapping: '{{if index . (lower "telephoneNumber")}}{{ index . (lower "telephoneNumber") 0 | toString }}{{end}}'  
        - name: mobile_number
          mapping: '{{if index . (lower "mobile")}}{{ index . (lower "mobile") 0 | toString }}{{end}}'  
        - name: manager
          mapping: '{{if index . (lower "manager")}}{{ index . (lower "manager") 0 | toString }}{{end}}'  
        - name: groups
          type: json
          mapping: '{{ index . (lower "memberOf") | toStrings | toJson }}'  
---
kind: destination
spec:
  name: sqlite
  path: cloudquery/sqlite
  version: v2.0.5
  spec:
    connection_string: ./import.sqlite
